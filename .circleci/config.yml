version: 2
jobs:
  build:
    docker:
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/circle-ci:tap-tester-v4
      - image: amazon/dynamodb-local
        entrypoint: ["java", "-Xmx1G", "-jar", "DynamoDBLocal.jar"]
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: 'Setup virtual env'
          command: |
            virtualenv -p python3 /usr/local/share/virtualenvs/tap-dynamodb
            source /usr/local/share/virtualenvs/tap-dynamodb/bin/activate
            pip install .[dev]
      - run:
          name: 'pylint'
          command: |
            source /usr/local/share/virtualenvs/tap-dynamodb/bin/activate
            pylint tap_dynamodb --disable 'duplicate-code,missing-module-docstring,missing-class-docstring,too-few-public-methods,line-too-long,fixme,missing-function-docstring,raise-missing-from,consider-using-f-string,too-many-locals,invalid-name,too-many-arguments'
      - run:
          name: 'Unit Tests'
          command: |
            source /usr/local/share/virtualenvs/tap-dynamodb/bin/activate
            pip install nose coverage
            nosetests --with-coverage --cover-erase --cover-package=tap_dynamodb --cover-html-dir=htmlcov tests/unittests
            coverage html
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: htmlcov
      - run:
          name: 'Tap Tester'
          command: |
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/sandbox tap-tester.env
            source tap-tester.env
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            run-test --tap=tap-dynamodb \
                     --target=target-stitch \
                     --orchestrator=stitch-orchestrator \
                     --email=harrison+sandboxtest@stitchdata.com \
                     --password=$SANDBOX_PASSWORD \
                     --client-id=50 \
                     tests
workflows:
  version: 2
  commit:
    jobs:
      - build:
          context: circleci-user
  build_daily:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          context: circleci-user
